{"version":3,"sources":["app.js","misc/capitalize.filter.js","misc/d3Config.constant.js","misc/itemFilter.value.js","routes/routes.js","services/classes.service.js","services/columns.service.js","services/gameModes.service.js","services/isItemVisible.service.js","services/itemLoader.service.js","services/seasons.service.js","services/sections.service.js","directives/disclaimer/disclaimer.directive.js","directives/navbar/navbar.controller.js","directives/navbar/navbar.directive.js","directives/options/options.directive.js","routes/cube/cube.controller.js","routes/editor/editor.controller.js","Main.controller.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager', ['ngRoute']);\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').filter('capitalize', capitalizeFilter);\r\n\r\n    function capitalizeFilter() {\r\n        return function(input) {\r\n            if (typeof input === \"String\") return input;\r\n            var tokens = input.split('-');\r\n            tokens = _.map(tokens, capitalize);\r\n            return tokens.join(' ');\r\n        };\r\n\r\n        function capitalize(input) {\r\n            input = input.toLowerCase();\r\n            return input.substring(0, 1).toUpperCase() + input.substring(1);\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').constant('d3Config', {\r\n        githubUrl: 'https://github.com/palortoff/d3-item-manager'\r\n    })\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').value('itemFilter', {\r\n        filter: ''\r\n    });\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').config(function($routeProvider) {\r\n\r\n        $routeProvider.\r\n            when('/', {\r\n                redirectTo: '/cube'\r\n            }).\r\n            when('/cube', {\r\n                templateUrl: 'routes/cube/cube.template.html',\r\n                controller:'CubeController',\r\n                controllerAs: 'vm'\r\n            }).\r\n            when('/editor', {\r\n                templateUrl: 'routes/editor/editor.template.html',\r\n                controller: 'EditorController',\r\n                controllerAs: 'vm'\r\n            });\r\n    });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('classes', classes);\r\n\r\n    var keyCurrent = 'currentClass';\r\n\r\n    var _all = [\r\n        {id: 0, name: 'all'},\r\n        {id: 6, name: 'barbarian'},\r\n        {id: 3, name: 'crusader'},\r\n        {id: 2, name: 'demon-hunter'},\r\n        {id: 1, name: 'monk'},\r\n        {id: 4, name: 'witch-doctor'},\r\n        {id: 5, name: 'wizard'}\r\n    ];\r\n    var _current = localStorage.getItem(keyCurrent) || 6;\r\n\r\n    function classes() {\r\n        return {\r\n            all:        all,\r\n            distinct: distinct,\r\n            current:    current,\r\n            setCurrent: setCurrent\r\n        };\r\n\r\n        function current() {\r\n            return _.find(all(), function(c) {return c.id == _current;});\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n        function distinct(){\r\n            return _all.filter(function(c){return c.id != 0;});\r\n        }\r\n\r\n        function setCurrent(id) {\r\n            _current = id;\r\n            localStorage.setItem(keyCurrent, id)\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('columns', columns);\r\n\r\n    var keyAll = 'allColumns';\r\n    var defaultSet = ['Stashed'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n\r\n    function columns() {\r\n        return {\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('gameModes', gameModes);\r\n\r\n    var keyAll = 'allGameModes';\r\n    var keyCurrent = 'currentGameMode';\r\n    var defaultSet = ['Softcore', 'Hardcore'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n    var _current = localStorage.getItem(keyCurrent) || _all[0];\r\n\r\n    function gameModes() {\r\n        return {\r\n            current:    current,\r\n            setCurrent: setCurrent,\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function current() {\r\n            return _current;\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function setCurrent(c) {\r\n            _current = c;\r\n            localStorage.setItem(keyCurrent, c)\r\n        }\r\n\r\n        function setDefault() {\r\n            if (!_.find(_all, current)) {\r\n                setCurrent(_all[0]);\r\n            }\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            setDefault();\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('isItemVisible', isItemVisible);\r\n\r\n    function isItemVisible(classes) {\r\n        return function(item) {\r\n            if (classes.current().id == 0) return true;\r\n            return !!_.find(item.classes, function(itemClass) {\r\n                return itemClass == classes.current().id;\r\n            })\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('loadItems', loadItems);\r\n\r\n    function loadItems($http){\r\n        return  function (section)\r\n        {\r\n            return $http.get('items/'+section+'.json').\r\n                then(function(result) {\r\n                    return result.data;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('seasons', seasons);\r\n\r\n    var keyAll = 'allSeasons';\r\n    var keyCurrent = 'currentSeason';\r\n    var defaultSet = ['Season 4'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n    var _current = localStorage.getItem(keyCurrent) || \"Non Season\";\r\n\r\n    function seasons() {\r\n        return {\r\n            current:    current,\r\n            setCurrent: setCurrent,\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function current() {\r\n            return _current;\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function setCurrent(c) {\r\n            _current = c;\r\n            localStorage.setItem(keyCurrent, c)\r\n        }\r\n\r\n        function setDefault() {\r\n            if (!_.find(_all, current)) {\r\n                setCurrent(_all[0]);\r\n            }\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            setDefault();\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('sections', sections);\r\n\r\n    var all = ['armor', 'weapons', 'jewelry'];\r\n    var current = all[0];\r\n\r\n    function sections(){\r\n        current = localStorage.getItem('section') || all[0];\r\n\r\n        return {\r\n            all: all,\r\n            current: function(){return current;},\r\n            set: set\r\n        };\r\n\r\n        function set(s){\r\n            current = s;\r\n            localStorage.setItem('section', s)\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('disclaimer', disclaimer);\r\n\r\n    var disclaimerVersion = 1;\r\n    var key = 'disclaimerRead';\r\n\r\n    function disclaimer(){\r\n        return {\r\n            restrict:'E',\r\n            scope: {},\r\n            templateUrl: 'directives/disclaimer/disclaimer.template.html',\r\n            controller: DisclaimerController,\r\n            controllerAs: 'vm'\r\n        };\r\n\r\n        function DisclaimerController(d3Config){\r\n            var vm = this;\r\n            vm.d3Config = d3Config;\r\n            vm.showDisclaimer= showDisclaimer;\r\n            vm.dismiss = dismiss;\r\n\r\n            function showDisclaimer(){\r\n                return localStorage.getItem(key) != disclaimerVersion;\r\n            }\r\n\r\n            function dismiss(){\r\n                localStorage.setItem(key, disclaimerVersion);\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').controller('NavBarController', NavBarController);\r\n\r\n    function NavBarController(classes, gameModes, seasons) {\r\n        var vm = this;\r\n\r\n        vm.gameModes = gameModes;\r\n        vm.seasons = seasons;\r\n        vm.classes = classes;\r\n\r\n        vm.showDisclaimer = function() {\r\n            localStorage.setItem('disclaimerRead', 0);\r\n        };\r\n        vm.showOptions = function() {\r\n            localStorage.setItem('showOptions', \"true\");\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('navBar', function () {\r\n        return {\r\n            restrict:'E',\r\n            templateUrl: 'directives/navbar/navbar.template.html',\r\n            scope: {},\r\n            controller: 'NavBarController',\r\n            controllerAs: 'vm'\r\n        };\r\n    })\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('options', options);\r\n\r\n    var disclaimerVersion = 1;\r\n    var key = 'showOptions';\r\n\r\n    function options(){\r\n        return {\r\n            restrict:'E',\r\n            scope: {},\r\n            templateUrl: 'directives/options/options.template.html',\r\n            controller: OptionsController,\r\n            controllerAs: 'vm'\r\n        };\r\n\r\n        function OptionsController(gameModes, seasons, columns){\r\n            var vm = this;\r\n            vm.gameModes = gameModes;\r\n            vm.addNewGameMode = addNewGameMode;\r\n\r\n            vm.seasons = seasons;\r\n            vm.addNewSeason = addNewSeason;\r\n\r\n            vm.columns = columns;\r\n            vm.addNewColumn = addNewColumn;\r\n\r\n            vm.showOptions= showOptions;\r\n            vm.dismiss = dismiss;\r\n\r\n            function addNewSeason(){\r\n                seasons.add(vm.newSeason);\r\n                vm.newSeason='';\r\n            }\r\n            function addNewGameMode(){\r\n                gameModes.add(vm.newGameMode);\r\n                vm.newGameMode='';\r\n            }\r\n            function addNewColumn(){\r\n                columns.add(vm.newColumn);\r\n                vm.newColumn='';\r\n            }\r\n\r\n            function showOptions(){\r\n                return localStorage.getItem(key) === \"true\";\r\n            }\r\n\r\n            function dismiss(){\r\n                localStorage.setItem(key, \"false\");\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').controller('CubeController', CubeController);\r\n\r\n    function CubeController(loadItems, sections, isItemVisible, gameModes, seasons, itemFilter, columns) {\r\n        var vm = this;\r\n\r\n        vm.itemChanged = itemChanged;\r\n\r\n        vm.itemFilter = itemFilter;\r\n\r\n        vm.sections = sections.all;\r\n        vm.section = sections.current;\r\n\r\n        vm.isVisible = isItemVisible;\r\n\r\n        vm.gameMode = gameModes.current;\r\n        vm.season = seasons.current;\r\n        vm.columns = columns;\r\n\r\n        init();\r\n\r\n        function init() {\r\n            vm.tracking = {};\r\n            sections.all.forEach(function(section) {load(section)});\r\n        }\r\n\r\n        function load(section) {\r\n            loadItems(section).\r\n                then(function(data) {\r\n                    vm[section] = data;\r\n                }).\r\n                then(loadTracking.bind(null, section)).\r\n                then(addTracking.bind(null, section));\r\n        }\r\n\r\n        function loadTracking(section) {\r\n            vm.tracking[section] = JSON.parse(localStorage.getItem(section));\r\n            if (!vm.tracking[section]) vm.tracking[section] = {};\r\n            return vm.tracking[section];\r\n        }\r\n\r\n        function addTracking(section, tracking) {\r\n            vm[section].forEach(function(item) {\r\n                if (!tracking[item.id]) tracking[item.id] = {};\r\n                item.track = tracking[item.id];\r\n            })\r\n        }\r\n\r\n        function itemChanged(section) {\r\n            localStorage.setItem(section, JSON.stringify(vm.tracking[section]));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular.module('d3-item-manager').controller('EditorController', EditorController);\r\n\r\n    function EditorController($q, loadItems, sections, isItemVisible, classes) {\r\n        var vm = this;\r\n\r\n        vm.isVisible = isItemVisible;\r\n\r\n        vm.sections = sections.all;\r\n        vm.section = sections.current;\r\n\r\n        vm.toggleVisibility = toggleVisibility;\r\n\r\n        init();\r\n\r\n        function init() {\r\n            sections.all.forEach(function(section) {load(section)});\r\n        }\r\n\r\n\r\n\r\n        function load(section) {\r\n            _loadItems(section).\r\n                then(function(data) {\r\n                    vm[section] = data;\r\n                }).\r\n                then(addVisibility.bind(null, section));\r\n        }\r\n\r\n        function _loadItems(section){\r\n            var data = localStorage.getItem('json_' + section);\r\n            if (data){\r\n                data = JSON.parse(data);\r\n                return $q.when(data);\r\n            }\r\n            else{\r\n                return loadItems(section);\r\n            }\r\n        }\r\n\r\n        function addVisibility(section) {\r\n            vm[section].forEach(function(item) {\r\n                if (!item.classes) {\r\n                    item.classes = [];\r\n                }\r\n            })\r\n        }\r\n\r\n        function toggleVisibility(item) {\r\n            if (isItemVisible(item)) {\r\n                item.classes = item.classes.filter(function(c){return c != classes.current();});\r\n            }\r\n            else {\r\n                item.classes.push(classes.current());\r\n            }\r\n\r\n            saveSection();\r\n        }\r\n\r\n        function saveSection(){\r\n            localStorage.setItem('json_' + sections.current(), JSON.stringify(vm[sections.current()]));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').controller('MainController', MainController);\r\n\r\n    function MainController(sections, itemFilter) {\r\n        var vm = this;\r\n\r\n        vm.sections = sections.all;\r\n        vm.section = sections.current;\r\n        vm.setSection = sections.set;\r\n\r\n        vm.itemFilter = itemFilter;\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}