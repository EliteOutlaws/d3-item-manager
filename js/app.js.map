{"version":3,"sources":["app.js","misc/capitalize.filter.js","misc/d3Config.constant.js","routes/routes.js","services/classes.service.js","services/columns.service.js","services/gameModes.service.js","services/isItemVisibleForClass.service.js","services/isVisibleForCategory.service.js","services/item.service.js","services/itemCategory.service.js","services/itemTracking.service.js","services/seasons.service.js","services/version.service.js","directives/disclaimer/disclaimer.directive.js","directives/itemFilter/itemFilter.directive.js","directives/navbar/navbar.controller.js","directives/navbar/navbar.directive.js","directives/options/options.directive.js","routes/items/items.controller.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager', ['ngRoute']);\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').filter('capitalize', capitalizeFilter);\r\n\r\n    function capitalizeFilter() {\r\n        return function(input) {\r\n            if (typeof input === \"String\") return input;\r\n            var tokens = input.split('-');\r\n            tokens = _.map(tokens, capitalize);\r\n            return tokens.join(' ');\r\n        };\r\n\r\n        function capitalize(input) {\r\n            input = input.toLowerCase();\r\n            return input.substring(0, 1).toUpperCase() + input.substring(1);\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').constant('d3Config', {\r\n        githubUrl: 'https://github.com/palortoff/d3-item-manager'\r\n    })\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').config(function($routeProvider) {\r\n\r\n        $routeProvider.\r\n            when('/', {\r\n                redirectTo: '/items'\r\n            }).\r\n            when('/items', {\r\n                templateUrl: 'routes/items/items.template.html',\r\n                controller:'ItemsController',\r\n                controllerAs: 'vm'\r\n            });\r\n    });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('classes', classes);\r\n\r\n    var keyCurrent = 'currentClass';\r\n\r\n    var _all = [\r\n        {id: 0, name: 'all'},\r\n        {id: 6, name: 'barbarian'},\r\n        {id: 3, name: 'crusader'},\r\n        {id: 2, name: 'demon-hunter'},\r\n        {id: 1, name: 'monk'},\r\n        {id: 4, name: 'witch-doctor'},\r\n        {id: 5, name: 'wizard'}\r\n    ];\r\n    var _current = localStorage.getItem(keyCurrent) || 6;\r\n\r\n    function classes() {\r\n        return {\r\n            all:        all,\r\n            distinct:   distinct,\r\n            current:    current,\r\n            setCurrent: setCurrent\r\n        };\r\n\r\n        function current() {\r\n            return _.find(all(), function(c) {return c.id == _current;});\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function distinct() {\r\n            return _all.filter(function(c) {return c.id != 0;});\r\n        }\r\n\r\n        function setCurrent(id) {\r\n            _current = id;\r\n            localStorage.setItem(keyCurrent, id)\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('columns', columns);\r\n\r\n    var keyAll = 'allColumns';\r\n    var defaultSet = ['Stashed'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n\r\n    function columns() {\r\n        return {\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('gameModes', gameModes);\r\n\r\n    var keyAll = 'allGameModes';\r\n    var keyCurrent = 'currentGameMode';\r\n    var defaultSet = ['Softcore', 'Hardcore'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n    var _current = localStorage.getItem(keyCurrent) || _all[0];\r\n\r\n    function gameModes() {\r\n        return {\r\n            current:    current,\r\n            setCurrent: setCurrent,\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function current() {\r\n            return _current;\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function setCurrent(c) {\r\n            _current = c;\r\n            localStorage.setItem(keyCurrent, c)\r\n        }\r\n\r\n        function setDefault() {\r\n            if (!_.find(_all, current)) {\r\n                setCurrent(_all[0]);\r\n            }\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            setDefault();\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('isItemVisibleForClass', isItemVisibleForClass);\r\n\r\n    function isItemVisibleForClass(classes, $http) {\r\n\r\n        var itemTypeClass;\r\n        var isLoaded = false;\r\n\r\n        $http.get('items/itemTypeClass.json?' + Date.now()).\r\n            then(function(result) {\r\n                itemTypeClass = result.data;\r\n                isLoaded = true;\r\n            });\r\n\r\n        return function(item) {\r\n            if (!isLoaded) return false;\r\n\r\n            if (item.name === \"Eye of Peshkov\")\r\n            {\r\n                isLoaded = true; // TODO: remove debug line\r\n            }\r\n\r\n            var itemVisibility = isItemVisible(item);\r\n            if (itemVisibility === false) return false;\r\n            if (itemVisibility === true) return true;\r\n\r\n            return isItemTypeVisible(item);\r\n\r\n        };\r\n\r\n        function isItemVisible(item){\r\n            if (item.classes){\r\n                return _.contains(item.classes, classes.current().name);\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        function isItemTypeVisible(item){\r\n            if (itemTypeClass[item.type.id]){\r\n                return _.contains(itemTypeClass[item.type.id], classes.current().name);\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('isItemVisibleForCategory', isItemVisibleForCategory);\r\n\r\n    function isItemVisibleForCategory(itemCategory) {\r\n        return function(item) {\r\n            return itemCategory.current().filter(item);\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('items', items);\r\n\r\n    function items($http) {\r\n        return {\r\n            load\r\n        };\r\n\r\n        function load() {\r\n            return $http.get('items/items.json?' + Date.now()).\r\n                then(function(result) {\r\n                    return result.data;\r\n                });\r\n        }\r\n    }\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('itemCategory', itemCategory);\r\n\r\n    var categories = {\r\n        0:{\r\n            \"class\":\"divider\"\r\n        },\r\n        1: {\r\n            name: \"Cube: Weapons\",\r\n            filter: function(item){\r\n                return item.cube && item.cubeCategory === \"Weapon\";\r\n            }\r\n        },\r\n        2: {\r\n            name: \"Cube: Armor\",\r\n            filter: function(item){\r\n                return item.cube && item.cubeCategory === \"Armor\";\r\n            }\r\n        },\r\n        3:{\r\n            name: \"Cube: Jewelry\",\r\n            filter: function(item){\r\n                return item.cube && item.cubeCategory === \"Jewelry\";\r\n            }\r\n        },\r\n        4:{\r\n            name: 'other...'\r\n        }\r\n    };\r\n\r\n    var selectionOrder=[1,2,3];\r\n\r\n    var current;\r\n    var key='itemCategory';\r\n\r\n    function itemCategory(){\r\n        current = localStorage.getItem(key) || 1;\r\n\r\n        return {\r\n            all: categories,\r\n            current: function(){return categories[current];},\r\n            getCategory: function(id){return categories[id]},\r\n            selectionOrder: selectionOrder,\r\n            set: set\r\n        };\r\n\r\n        function set(s){\r\n            current = s;\r\n            localStorage.setItem(key, s)\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('itemTracking', itemTracking);\r\n\r\n    var key = 'itemTracking';\r\n\r\n    function itemTracking($timeout) {\r\n        var tracking;\r\n        var notifyTimer;\r\n        var tracking2;\r\n        return {\r\n            load,\r\n            save\r\n        };\r\n\r\n        function load() {\r\n            upgradeIfNecessary();\r\n            tracking = JSON.parse(localStorage.getItem(key)) || {};\r\n            return tracking;\r\n        }\r\n\r\n        function save() {\r\n            notifySave();\r\n            localStorage.setItem(key, JSON.stringify(tracking));\r\n        }\r\n\r\n        function notifySave() {\r\n            $timeout.cancel(notifyTimer);\r\n            notifyTimer = $timeout(function() {\r\n                toastr.success('Items saved', {timeOut: 1000});\r\n            }, 1000);\r\n        }\r\n\r\n        function upgradeIfNecessary() {\r\n            upgradeFromCubeSectionsToOneTrackingContainer();\r\n        }\r\n\r\n        function upgradeFromCubeSectionsToOneTrackingContainer() {\r\n            var hasOldSectionData = !!localStorage.getItem('armor') || !!localStorage.getItem('weapons') || !!localStorage.getItem('jewelry');\r\n            var hasTrackingContainer = !!localStorage.getItem(key);\r\n\r\n            if (hasOldSectionData && !hasTrackingContainer) {\r\n                var armor = JSON.parse(localStorage.getItem('armor'));\r\n                var weapons = JSON.parse(localStorage.getItem('weapons'));\r\n                var jewls = JSON.parse(localStorage.getItem('jewelry'));\r\n                tracking = _.defaults({}, armor, weapons, jewls);\r\n                save();\r\n                console.log(\"upgradedFromCubeSectionsToOneTrackingContainer\");\r\n\r\n                localStorage.setItem('armor_backup', JSON.stringify(armor));\r\n                localStorage.setItem('weapons_backup', JSON.stringify(weapons));\r\n                localStorage.setItem('jewls_backup', JSON.stringify(jewls));\r\n\r\n                localStorage.removeItem('armor');\r\n                localStorage.removeItem('weapons');\r\n                localStorage.removeItem('jewelry');\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('seasons', seasons);\r\n\r\n    var keyAll = 'allSeasons';\r\n    var keyCurrent = 'currentSeason';\r\n    var defaultSet = ['Season 4'];\r\n\r\n    var _all = JSON.parse(localStorage.getItem(keyAll)) || defaultSet;\r\n    var _current = localStorage.getItem(keyCurrent) || \"Non Season\";\r\n\r\n    function seasons() {\r\n        return {\r\n            current:    current,\r\n            setCurrent: setCurrent,\r\n            remove:     remove,\r\n            add:        add,\r\n            all:        all\r\n        };\r\n\r\n        function current() {\r\n            return _current;\r\n        }\r\n\r\n        function all() {\r\n            return _all;\r\n        }\r\n\r\n        function setCurrent(c) {\r\n            _current = c;\r\n            localStorage.setItem(keyCurrent, c)\r\n        }\r\n\r\n        function setDefault() {\r\n            if (!_.find(_all, current)) {\r\n                setCurrent(_all[0]);\r\n            }\r\n        }\r\n\r\n        function remove(gm) {\r\n            _all = _all.filter(function(item) {return item !== gm;});\r\n            setDefault();\r\n            save();\r\n        }\r\n\r\n        function add(gm) {\r\n            if (_.contains(_all, gm)) return;\r\n            _all.push(gm);\r\n            save();\r\n        }\r\n\r\n        function save() {\r\n            localStorage.setItem(keyAll, JSON.stringify(_all));\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').factory('version', version);\r\n\r\n    function version($http) {\r\n        return {\r\n            get:        getVersion\r\n        };\r\n\r\n        function getVersion(){\r\n            return $http.get('version.json?' + Date.now()).\r\n                then(function(result) {\r\n                    return result.data;\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('disclaimer', disclaimer);\r\n\r\n    var disclaimerVersion = 1;\r\n    var key = 'disclaimerRead';\r\n\r\n    function disclaimer(){\r\n        return {\r\n            restrict:'E',\r\n            scope: {},\r\n            templateUrl: 'directives/disclaimer/disclaimer.template.html',\r\n            controller: DisclaimerController,\r\n            controllerAs: 'vm'\r\n        };\r\n\r\n        function DisclaimerController(d3Config, version){\r\n            var vm = this;\r\n            vm.d3Config = d3Config;\r\n            vm.showDisclaimer= showDisclaimer;\r\n            vm.dismiss = dismiss;\r\n            vm.version = '';\r\n\r\n            version.get().then(function(version){\r\n                vm.version = version.version;\r\n            });\r\n\r\n\r\n            function showDisclaimer(){\r\n                return localStorage.getItem(key) != disclaimerVersion;\r\n            }\r\n\r\n            function dismiss(){\r\n                localStorage.setItem(key, disclaimerVersion);\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('itemFilter', itemFilter);\r\n\r\n    function itemFilter(){\r\n        return {\r\n            restrict:'E',\r\n            scope: {\r\n                filterValue:'='\r\n            },\r\n            bindToController: true,\r\n            templateUrl: 'directives/itemFilter/itemFilter.template.html',\r\n            controller: ItemFilterController,\r\n            controllerAs: 'vm'\r\n        };\r\n\r\n        function ItemFilterController(){\r\n            var vm = this;\r\n            vm.clear = clear;\r\n            vm.showClear = showClear;\r\n\r\n            function clear(){\r\n                vm.filterValue = '';\r\n            }\r\n\r\n            function showClear(){\r\n                return vm.filterValue.length > 0;\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').controller('NavBarController', NavBarController);\r\n\r\n    function NavBarController(classes, gameModes, seasons, itemCategory) {\r\n        var vm = this;\r\n\r\n        vm.gameModes = gameModes;\r\n        vm.seasons = seasons;\r\n        vm.classes = classes;\r\n        vm.itemCategory = itemCategory;\r\n\r\n        vm.showDisclaimer = function() {\r\n            localStorage.setItem('disclaimerRead', 0);\r\n        };\r\n        vm.showOptions = function() {\r\n            localStorage.setItem('showOptions', \"true\");\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('navBar', function () {\r\n        return {\r\n            restrict:'E',\r\n            templateUrl: 'directives/navbar/navbar.template.html',\r\n            scope: {},\r\n            controller: 'NavBarController',\r\n            controllerAs: 'vm'\r\n        };\r\n    })\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').directive('options', options);\r\n\r\n    var disclaimerVersion = 1;\r\n    var key = 'showOptions';\r\n\r\n    function options(){\r\n        return {\r\n            restrict:'E',\r\n            scope: {},\r\n            templateUrl: 'directives/options/options.template.html',\r\n            controller: OptionsController,\r\n            controllerAs: 'vm'\r\n        };\r\n\r\n        function OptionsController(gameModes, seasons, columns){\r\n            var vm = this;\r\n            vm.gameModes = gameModes;\r\n            vm.addNewGameMode = addNewGameMode;\r\n\r\n            vm.seasons = seasons;\r\n            vm.addNewSeason = addNewSeason;\r\n\r\n            vm.columns = columns;\r\n            vm.addNewColumn = addNewColumn;\r\n\r\n            vm.showOptions= showOptions;\r\n            vm.dismiss = dismiss;\r\n\r\n            function addNewSeason(){\r\n                seasons.add(vm.newSeason);\r\n                vm.newSeason='';\r\n            }\r\n            function addNewGameMode(){\r\n                gameModes.add(vm.newGameMode);\r\n                vm.newGameMode='';\r\n            }\r\n            function addNewColumn(){\r\n                columns.add(vm.newColumn);\r\n                vm.newColumn='';\r\n            }\r\n\r\n            function showOptions(){\r\n                return localStorage.getItem(key) === \"true\";\r\n            }\r\n\r\n            function dismiss(){\r\n                localStorage.setItem(key, \"false\");\r\n            }\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('d3-item-manager').controller('ItemsController', ItemsController);\r\n\r\n    function ItemsController(items, itemTracking, isItemVisibleForCategory, isItemVisibleForClass, gameModes, seasons, columns, itemCategory) {\r\n        var vm = this;\r\n\r\n        vm.itemFilter = '';\r\n\r\n        vm.isVisible = isVisible;\r\n\r\n        vm.gameMode = gameModes.current;\r\n        vm.season = seasons.current;\r\n        vm.columns = columns;\r\n        vm.itemCategory = itemCategory;\r\n\r\n        vm.toggle = toggle;\r\n        vm.cellClass = cellClass;\r\n        vm.allColumns = allColumns;\r\n        vm.items = undefined;\r\n\r\n        init();\r\n\r\n        function init() {\r\n           loadItems();\r\n        }\r\n\r\n        function loadItems() {\r\n            items.load().\r\n                then(function(data) {\r\n                    vm.items = data;\r\n                }).\r\n                then(itemTracking.load).\r\n                then(addTracking);\r\n        }\r\n\r\n        function addTracking(tracking) {\r\n            vm.items.forEach(function(item) {\r\n                if (!tracking[item.id]) tracking[item.id] = {};\r\n                item.track = tracking[item.id];\r\n            })\r\n        }\r\n\r\n\r\n        function toggle(item, column) {\r\n            if (!item.track[vm.gameMode()]) {\r\n                item.track[vm.gameMode()] = {};\r\n            }\r\n            if (!item.track[vm.gameMode()][vm.season()]) {\r\n                item.track[vm.gameMode()][vm.season()] = {};\r\n            }\r\n            item.track[vm.gameMode()][vm.season()][column] = !item.track[vm.gameMode()][vm.season()][column];\r\n            itemTracking.save();\r\n        }\r\n\r\n        function cellClass(item, column) {\r\n            return isChecked(item, column) ? 'checked' : '';\r\n        }\r\n\r\n        function isChecked(item, column) {\r\n            try {\r\n                return item.track[vm.gameMode()][vm.season()][column];\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function allColumns() {\r\n            return _.flatten(['Cubed', vm.columns.all()]);\r\n        }\r\n\r\n        function isVisible(item){\r\n            if (!isItemVisibleForCategory(item)) {\r\n                return false;\r\n            }\r\n            if (!isItemVisibleForClass(item)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}